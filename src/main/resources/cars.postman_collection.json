{
	"info": {
		"_postman_id": "5feb79f5-5a04-4758-bc98-51b4a249facb",
		"name": "cars",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get all cars",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"ok response\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\",function () {\r",
							"  pm.expect(jsonData).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "get car with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"ok response\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(\"f6cf16d4-6b91-11eb-9439-0242ac130002\");\r",
							"});\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.brand).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.country).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars/f6cf16d4-6b91-11eb-9439-0242ac130002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars",
						"f6cf16d4-6b91-11eb-9439-0242ac130002"
					]
				}
			},
			"response": []
		},
		{
			"name": "add new car",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response created\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Test data type of the response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.brand).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.country).to.be.a(\"string\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"  "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"brand\":\"BRAND11\",\"registration\":1612189673792,\"country\":\"COUNTRY11\",\"createdAt\":1612189673795,\"lastUpdated\":1612189673795}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "update car with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"ok response\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"id\", () => {\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.id).to.eql(\"f6cf16d4-6b91-11eb-9439-0242ac130002\");\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Updated car contains the right brand\", function () {\r",
							"\tpm.expect(pm.response.text()).to.include(\"BRAND111\");\r",
							"});    "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": \"f6cf16d4-6b91-11eb-9439-0242ac130002\",\r\n        \"brand\": \"BRAND111\",\r\n        \"country\": \"COUNTRY111\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars/f6cf16d4-6b91-11eb-9439-0242ac130002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars",
						"f6cf16d4-6b91-11eb-9439-0242ac130002"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete car with given id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"ok response\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Deleted Car should send a success message\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Car Deleted Successfully\");\r",
							"});   \r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"}); "
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars/f6cf16d4-6b91-11eb-9439-0242ac130002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars",
						"f6cf16d4-6b91-11eb-9439-0242ac130002"
					]
				}
			},
			"response": []
		},
		{
			"name": "add new car forcing error",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"response should throw a brand error\", function (){\r",
							"     pm.expect(pm.response.text()).to.include(\"Brand can't be null\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"country\": \"COUNTRY11111111\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "get car by wrong id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"Status code is 404\", function () {\r",
							"\tpm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"car not found with the given id\", function () {\r",
							"\tpm.expect(pm.response.text()).to.include(\"Car with id 0 not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars/0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a car with null country",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"response should throw a brand error\", function (){\r",
							"     pm.expect(pm.response.text()).to.include(\"Country can't be null\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"id\": \"f6cf16d4-6b91-11eb-9439-0242ac130002\",\r\n        \"brand\": \"BRAND111111111\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars/f6cf16d4-6b91-11eb-9439-0242ac130002",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars",
						"f6cf16d4-6b91-11eb-9439-0242ac130002"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete car do not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"\tpm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Deleted Car should send a fail message\", function () {\r",
							"\tpm.expect(pm.response.text()).to.include(\"Car with id 0 not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/car-api/api/cars/0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"car-api",
						"api",
						"cars",
						"0"
					]
				}
			},
			"response": []
		}
	]
}